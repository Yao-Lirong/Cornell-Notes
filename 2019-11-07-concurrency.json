{"version":2,"kind":"Article","sha256":"c7313aafec1a40050695a3268fd9592cbc202a4b47f9e2f6e4bfd8f4c599336b","slug":"2019-11-07-concurrency","location":"/CS2112/2019-11-07-Concurrency.md","dependencies":[],"frontmatter":{"title":"Concurrency","tags":["Cornell","19FA","CS2112"],"date":"2019-11-07","numbering":{"title":{"offset":1}},"exports":[{"format":"md","filename":"2019-11-07-Concurrency.md","url":"/cornell-notes/build/2019-11-07-Concurren-7fae3edf9d68006d3b87f78d01ba52ed.md"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"From Lecture: ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"yqAq344sPn"},{"type":"link","url":"https://www.cs.cornell.edu/courses/cs2112/2019fa/lectures/lecture.html?id=concurrency","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Concurrency","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"cdIvFNvdsQ"}],"urlSource":"https://www.cs.cornell.edu/courses/cs2112/2019fa/lectures/lecture.html?id=concurrency","key":"z5GrNbYBdY"}],"key":"vhApS2A3ON"},{"type":"thematicBreak","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"OntKTvHSuF"},{"type":"heading","depth":2,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Concurrency and Parallelism","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"oAFVioF72U"}],"identifier":"concurrency-and-parallelism","label":"Concurrency and Parallelism","html_id":"concurrency-and-parallelism","implicit":true,"key":"jvc3dKcfnP"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":16,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Concurrency: multiple threads (java level, can be executed by one core or multiple core)","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"ZO81cnGKcp"}],"key":"e9Ryo3Sl3Z"},{"type":"listItem","spread":true,"position":{"start":{"line":17,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"parallelism: multiple cores (hardware level. can execute one thread or multiple thread)","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"SqYnte9Dhn"}],"key":"hIqoV71l3I"}],"key":"xhRoBhDGj9"},{"type":"comment","value":"more","key":"Ug6LRf2Zyy"},{"type":"code","lang":"java","value":"import java.lang.Thread;\n\nclass Thread{\n    /** starts a new thread executing run() */\n    void start();\n    \n    /** Effect: anything; but default does nothing*/\n    void run();\n}","position":{"start":{"line":22,"column":1},"end":{"line":32,"column":1}},"key":"wWj1mPgPdL"},{"type":"paragraph","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"children":[{"type":"inlineCode","value":"run()","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"Hownbghv45"},{"type":"text","value":" 里面就是写的这个thread到底应该干什么","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"MiBISoqc4n"}],"key":"cuJ77n3XOD"},{"type":"heading","depth":2,"position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"children":[{"type":"text","value":"Threads Interference","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"key":"s6Nq3Z7geD"}],"identifier":"threads-interference","label":"Threads Interference","html_id":"threads-interference","implicit":true,"key":"fu7xLTvp51"},{"type":"paragraph","position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"children":[{"type":"text","value":"Best approach: most objects owned by 1 thread","position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"key":"sDVipXAyD7"}],"key":"UhjZvSyCtV"},{"type":"paragraph","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"children":[{"type":"text","value":"Read-Only sharing ","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"eeXWmTQB6B"},{"type":"emphasis","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"children":[{"type":"text","value":"ok","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"lh94u6YAh2"}],"key":"ionNu3Ypq9"}],"key":"wfTdUlsyoW"},{"type":"paragraph","position":{"start":{"line":44,"column":1},"end":{"line":44,"column":1}},"children":[{"type":"text","value":"Read/Write sharing | Write/Write sharing ","position":{"start":{"line":44,"column":1},"end":{"line":44,"column":1}},"key":"T0H4cIAxLp"},{"type":"emphasis","position":{"start":{"line":44,"column":1},"end":{"line":44,"column":1}},"children":[{"type":"text","value":"dangerous","position":{"start":{"line":44,"column":1},"end":{"line":44,"column":1}},"key":"tohywYclWM"}],"key":"hmDqk59ygO"}],"key":"b8EirdUfwH"},{"type":"code","lang":"java","value":"class Account {\n  int balance;\n  void withdraw(int n) {\n   int b = balance - n; // R1\u0001\n   balance = b;         // W1\u0001\n  }\n  void deposit(int n) {\n   int b = balance + n; // R2\u0001\n   balance = b;         // W2\u0001\n  }\n}","position":{"start":{"line":46,"column":1},"end":{"line":58,"column":1}},"key":"Ux3kptTDDT"},{"type":"paragraph","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"children":[{"type":"text","value":"e.g. initial balance: $100, T1 executes ","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"ZgsOXKg7Kn"},{"type":"inlineCode","value":"witdraw(50)","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"gSy4sCcMxA"},{"type":"text","value":", T2 executes ","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"UNePXjBa3C"},{"type":"inlineCode","value":"deposit(50)","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"eT0D6FaYyE"}],"key":"MXvAB4Jddv"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":62,"column":1},"end":{"line":66,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":62,"column":1},"end":{"line":63,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"children":[{"type":"text","value":"(R1, W1, R2, W2) or (R2, W2, R1, W1), the final balance is indeed $100.","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"xCt18UCx6U"}],"key":"GMdOI2WdL5"}],"key":"jTy2PSy9ZQ"},{"type":"listItem","spread":true,"position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"children":[{"type":"text","value":"(R1, R2, W2, W1) destroys $50 -> $50","position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"key":"d0sGRrGQDJ"}],"key":"K9lKEeUuey"}],"key":"B75KS91yjb"},{"type":"listItem","spread":true,"position":{"start":{"line":65,"column":1},"end":{"line":66,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":65,"column":1},"end":{"line":65,"column":1}},"children":[{"type":"text","value":"(R2, R1, W1, W2) creates ​$50 -> $150","position":{"start":{"line":65,"column":1},"end":{"line":65,"column":1}},"key":"MwHw24peB6"}],"key":"ZVPNOW4FCQ"}],"key":"nmoJP5ws82"}],"key":"pN6qPIACVB"},{"type":"paragraph","position":{"start":{"line":67,"column":1},"end":{"line":67,"column":1}},"children":[{"type":"text","value":"We therefore want deposit, withdraw method to be (or at least act to be) ","position":{"start":{"line":67,"column":1},"end":{"line":67,"column":1}},"key":"R0IETsfLVd"},{"type":"strong","position":{"start":{"line":67,"column":1},"end":{"line":67,"column":1}},"children":[{"type":"text","value":"atomic","position":{"start":{"line":67,"column":1},"end":{"line":67,"column":1}},"key":"Ek4g8sPcuX"}],"key":"XRKM1PRISV"},{"type":"text","value":" (indivisible), as if this sentence cannot be influenced by other threads (reading and writing are happening simultaneously) .","position":{"start":{"line":67,"column":1},"end":{"line":67,"column":1}},"key":"DeXPVmwYts"}],"key":"vkHvqhmJSV"},{"type":"heading","depth":2,"position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"children":[{"type":"text","value":"Mutex","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"rUw4nyhp1c"}],"identifier":"mutex","label":"Mutex","html_id":"mutex","implicit":true,"key":"EHbDCsTsKV"},{"type":"paragraph","position":{"start":{"line":71,"column":1},"end":{"line":71,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":71,"column":1},"end":{"line":71,"column":1}},"children":[{"type":"text","value":"(mutual exclusion locks)","position":{"start":{"line":71,"column":1},"end":{"line":71,"column":1}},"key":"xCO9EpbmfL"}],"key":"sWG3cvlqUO"}],"key":"OKXtERpGck"},{"type":"blockquote","position":{"start":{"line":73,"column":1},"end":{"line":73,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":73,"column":1},"end":{"line":73,"column":1}},"children":[{"type":"text","value":"Threads can acquire them and release them. At most one thread can hold a mutex at a time. While a mutex is being held by a thread, all other threads that try to acquire it will be blocked until it is released, at which point just one waiting thread will manage to acquire it.","position":{"start":{"line":73,"column":1},"end":{"line":73,"column":1}},"key":"V9fiCyOUjG"}],"key":"ix8qt0TBYh"}],"key":"pAOOHTyQek"},{"type":"paragraph","position":{"start":{"line":75,"column":1},"end":{"line":75,"column":1}},"children":[{"type":"text","value":"every write and read to a shared mutable variable, mutex must be held","position":{"start":{"line":75,"column":1},"end":{"line":75,"column":1}},"key":"c8xLgE4hux"}],"key":"wJ7zQzOdsw"},{"type":"code","lang":"java","value":"/** Effect: blocks current thread until mutex is held by another thread\n\t\t\tthen acquires mutex */\nacquire();\n\n/** Effect: release mutex */\nrelease();\n","position":{"start":{"line":77,"column":1},"end":{"line":85,"column":1}},"key":"DoyJOk3hB1"},{"type":"code","lang":"java","value":"synchronized(Object o){\n    //acquire o's mutex\n    ... // do some operations\n    //release o's mutex\n}","position":{"start":{"line":90,"column":1},"end":{"line":96,"column":1}},"key":"JeqltMjWAH"},{"type":"thematicBreak","position":{"start":{"line":98,"column":1},"end":{"line":98,"column":1}},"key":"qkIl6SE8vI"},{"type":"paragraph","position":{"start":{"line":100,"column":1},"end":{"line":100,"column":1}},"children":[{"type":"text","value":"Take ","position":{"start":{"line":100,"column":1},"end":{"line":100,"column":1}},"key":"Q6AOlB5EWx"},{"type":"inlineCode","value":"deposit & withdraw","position":{"start":{"line":100,"column":1},"end":{"line":100,"column":1}},"key":"HMnpIIKYQH"},{"type":"text","value":" as an example:","position":{"start":{"line":100,"column":1},"end":{"line":100,"column":1}},"key":"nL4gjYDQFP"}],"key":"OhgmDgOg9X"},{"type":"code","lang":"java","value":"void withdraw(int n) {\n   //do something\n   synchronized(this) {\n      //acquire o's mutex\n      balance -= n;\n      //release o's mutex\n   }\n   //do something else\n}","position":{"start":{"line":102,"column":1},"end":{"line":112,"column":1}},"key":"NslPef5vm8"},{"type":"paragraph","position":{"start":{"line":114,"column":1},"end":{"line":114,"column":1}},"children":[{"type":"text","value":"Because the pattern of wrapping entire method bodies in ","position":{"start":{"line":114,"column":1},"end":{"line":114,"column":1}},"key":"fDaEiozBSi"},{"type":"inlineCode","value":"synchronized(this)","position":{"start":{"line":114,"column":1},"end":{"line":114,"column":1}},"key":"JnvehTyKfO"},{"type":"text","value":" is so common, Java has syntactic sugar for it:","position":{"start":{"line":114,"column":1},"end":{"line":114,"column":1}},"key":"AO9aiECpib"}],"key":"yrw6PBRKco"},{"type":"code","lang":"java","value":"synchronized void withdraw(int n) {\n   balance -= n;\n}","position":{"start":{"line":116,"column":1},"end":{"line":120,"column":1}},"key":"tHVSCZKsM9"},{"type":"thematicBreak","position":{"start":{"line":122,"column":1},"end":{"line":122,"column":1}},"key":"eDlnTCvSxe"},{"type":"paragraph","position":{"start":{"line":124,"column":1},"end":{"line":124,"column":1}},"children":[{"type":"text","value":"Whenever mutex is not held, that variable guarded by the mutex will ","position":{"start":{"line":124,"column":1},"end":{"line":124,"column":1}},"key":"JEmfQOP2aO"},{"type":"strong","position":{"start":{"line":124,"column":1},"end":{"line":124,"column":1}},"children":[{"type":"text","value":"change unpredictably","position":{"start":{"line":124,"column":1},"end":{"line":124,"column":1}},"key":"kTk305qeq9"}],"key":"y018hg4HtP"},{"type":"text","value":" and the invariant will ","position":{"start":{"line":124,"column":1},"end":{"line":124,"column":1}},"key":"Dxwlo3MoW4"},{"type":"strong","position":{"start":{"line":124,"column":1},"end":{"line":124,"column":1}},"children":[{"type":"text","value":"not","position":{"start":{"line":124,"column":1},"end":{"line":124,"column":1}},"key":"V9v9kPlYIH"}],"key":"TtGPV3RTaB"},{"type":"text","value":" hold","position":{"start":{"line":124,"column":1},"end":{"line":124,"column":1}},"key":"KtshiBHs2o"}],"key":"dFOsLO9zZk"},{"type":"paragraph","position":{"start":{"line":126,"column":1},"end":{"line":126,"column":1}},"children":[{"type":"text","value":"as long as we called ","position":{"start":{"line":126,"column":1},"end":{"line":126,"column":1}},"key":"YuloByUcbG"},{"type":"inlineCode","value":"synchronized someMethodName()","position":{"start":{"line":126,"column":1},"end":{"line":126,"column":1}},"key":"E78EssYOHS"},{"type":"text","value":" or ","position":{"start":{"line":126,"column":1},"end":{"line":126,"column":1}},"key":"bNbd3uWVtK"},{"type":"inlineCode","value":"synchronized(this)","position":{"start":{"line":126,"column":1},"end":{"line":126,"column":1}},"key":"iOzuYNYORU"},{"type":"text","value":". Everything in this object/class ","position":{"start":{"line":126,"column":1},"end":{"line":126,"column":1}},"key":"RGkpU6GkjH"},{"type":"inlineCode","value":"this","position":{"start":{"line":126,"column":1},"end":{"line":126,"column":1}},"key":"rWtWzP64hA"},{"type":"text","value":" will be held mutex (?). So we want to write small methods and small classes. As mentioned previously:","position":{"start":{"line":126,"column":1},"end":{"line":126,"column":1}},"key":"fcSpGw0z0A"}],"key":"FW8TGaZPz9"},{"type":"blockquote","position":{"start":{"line":128,"column":1},"end":{"line":128,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":128,"column":1},"end":{"line":128,"column":1}},"children":[{"type":"text","value":"Best approach: most objects owned by 1 thread","position":{"start":{"line":128,"column":1},"end":{"line":128,"column":1}},"key":"GqVGZ4vmbW"}],"key":"lHY4gWluGj"}],"key":"nmRmUDgQsN"},{"type":"heading","depth":2,"position":{"start":{"line":130,"column":1},"end":{"line":130,"column":1}},"children":[{"type":"text","value":"Conclusion","position":{"start":{"line":130,"column":1},"end":{"line":130,"column":1}},"key":"jFHfeTbdL1"}],"identifier":"conclusion","label":"Conclusion","html_id":"conclusion","implicit":true,"key":"wKm48YcJNR"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":132,"column":1},"end":{"line":134,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":132,"column":1},"end":{"line":132,"column":1}},"children":[{"type":"strong","position":{"start":{"line":132,"column":1},"end":{"line":132,"column":1}},"children":[{"type":"text","value":"avoid unnecessary concurrency","position":{"start":{"line":132,"column":1},"end":{"line":132,"column":1}},"key":"tqXt4vxj7P"}],"key":"zWVGIU2G3C"},{"type":"text","value":": slows down the program","position":{"start":{"line":132,"column":1},"end":{"line":132,"column":1}},"key":"eLx5Wpb4YY"}],"key":"QlVTxrsKTY"},{"type":"listItem","spread":true,"position":{"start":{"line":133,"column":1},"end":{"line":133,"column":1}},"children":[{"type":"strong","position":{"start":{"line":133,"column":1},"end":{"line":133,"column":1}},"children":[{"type":"text","value":"limit sharing of mutable state","position":{"start":{"line":133,"column":1},"end":{"line":133,"column":1}},"key":"ohv77vptjk"}],"key":"Q8lzkCRyBB"},{"type":"text","value":": we don’t have to care about concurrency if its immutable(read only)","position":{"start":{"line":133,"column":1},"end":{"line":133,"column":1}},"key":"DTN2q1OeqQ"}],"key":"mBTSKfGHw0"},{"type":"listItem","spread":true,"position":{"start":{"line":134,"column":1},"end":{"line":134,"column":1}},"children":[{"type":"strong","position":{"start":{"line":134,"column":1},"end":{"line":134,"column":1}},"children":[{"type":"text","value":"guard all accesses to shared mutable state with mutexes","position":{"start":{"line":134,"column":1},"end":{"line":134,"column":1}},"key":"Kpriaw1jw2"}],"key":"oITjfexGVX"},{"type":"text","value":": in case of thread interference","position":{"start":{"line":134,"column":1},"end":{"line":134,"column":1}},"key":"TAXBqNc4ZM"}],"key":"paWmCwKiCy"}],"key":"bYbNbAa61u"}],"key":"s3C64WQXge"}],"key":"QWNGFFP2z1"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Building GUI","url":"/2019-10-29-event-handlers","group":"C S2112"},"next":{"title":"Synchronization","url":"/2019-11-12-synchronization","group":"C S2112"}}},"domain":"http://localhost:3000"}