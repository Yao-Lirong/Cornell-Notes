{"version":2,"kind":"Article","sha256":"bb19946182a0a22b66464c126bdf898df44994d7cfee9a4fcd7ba51663b1d43b","slug":"2020-04-16-the-environment-model","location":"/CS3110/2020-04-16-The-Environment-Model.md","dependencies":[],"frontmatter":{"title":"The Environment Model","tags":["Cornell","20SP","CS3110"],"date":"2020-04-16","authors":[{"nameParsed":{"literal":"Yao Lirong","given":"Yao","family":"Lirong"},"name":"Yao Lirong","affiliations":["Cornell University"],"url":"https://yao-lirong.github.io","linkedin":"https://www.linkedin.com/in/yao-lirong/","id":"contributors-myst-generated-uid-0"}],"keywords":["Cornell","CS","Yao Lirong"],"affiliations":[{"id":"Cornell University","name":"Cornell University"}],"numbering":{"title":{"offset":1}},"exports":[{"format":"md","filename":"2020-04-16-The-Environment-Model.md","url":"/cornell-notes/build/2020-04-16-The-Envir-7f025c10bc224919399845cc789f2614.md"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Step Relation","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"aIVc7hyp2Q"}],"identifier":"step-relation","label":"Step Relation","html_id":"step-relation","implicit":true,"key":"vbMFF9BE2M"},{"type":"paragraph","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"General Rules: don’t step on values; don’t step on variables","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"YbJmzcZE7N"}],"key":"vaux1eGY80"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":14,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"strong","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Small/Single Step Relation","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"E4vU9d5AFd"}],"key":"KVox7fIiWM"},{"type":"text","value":": ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"eOAXXFaY6d"},{"type":"inlineCode","value":"e --> e'","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"s1q299QoSF"},{"type":"text","value":", where e’ can be a value or another expression yet to be evaluated to a value","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"QQN20RKd3c"}],"key":"WA012fyF9G"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"strong","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Multi-Step Relation","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"jqTygEJFnr"}],"key":"nqWWE7O0QI"},{"type":"text","value":": ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"pQY8X714pF"},{"type":"inlineCode","value":"e -->* e'","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"mIHuQCAqtv"},{"type":"text","value":" is the reflexive closure of single step. It allows single step to be performed 0 or multiple times","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"EyweOElB2H"}],"key":"udUd3iO9CN"},{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"strong","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Big-Step Relation","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"rgFDKiF6Nv"}],"key":"Xr3eK3qhbp"},{"type":"text","value":": ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"ZrfxksrPkf"},{"type":"inlineCode","value":"e ==> v","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"HUm2hR8I5s"},{"type":"text","value":" step expressions to values through multi-step and stop when it becomes values.","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"IYxEpPUmPx"}],"key":"vpuru7sKEy"}],"key":"eW12EZ3XiY"},{"type":"heading","depth":2,"position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"link","url":"https://www.cs.cornell.edu/courses/cs3110/2020sp/textbook/interp/env_model.html","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Introduction","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"e6p9y0ePzE"}],"urlSource":"https://www.cs.cornell.edu/courses/cs3110/2020sp/textbook/interp/env_model.html","key":"dmIdcdgupx"}],"identifier":"introduction","label":"Introduction","html_id":"introduction","implicit":true,"key":"KQX0qCEjSm"},{"type":"blockquote","position":{"start":{"line":20,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"For sake of efficiency, it would be better to substitute ","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"eEvOcPKtVN"},{"type":"emphasis","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"lazily","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"zYcAFo8c2I"}],"key":"gCQmixwTaZ"},{"type":"text","value":": only when the value of a variable is needed should the interpreter have to do the substitution. That’s the key idea behind the ","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"EL41BiwAA1"},{"type":"emphasis","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"environment model","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"rb3lQFtgWE"}],"key":"g1OCMm5rJb"},{"type":"text","value":". In this model, there is a data structure called the ","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"XLE5xxm5gn"},{"type":"emphasis","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"dynamic environment","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"rlzO4DGMu9"}],"key":"JXbnoekVHr"},{"type":"text","value":", which is a dictionary mapping variable names to values. Whenever the value of a variable is needed, it’s looked up in that dictionary. （空间换时间）","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"ydlyjxwGee"}],"key":"Ki47nkZH6W"},{"type":"paragraph","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"Instead of ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"XO04oCF23X"},{"type":"inlineCode","value":"e ==> v","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"pKVoPpry1z"},{"type":"text","value":", we now have ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"BdLabp1GS5"},{"type":"inlineCode","value":"<env, e> ==> v","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"hnjyqP8Plh"},{"type":"text","value":", where ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"i8xguCX4IQ"},{"type":"inlineCode","value":"env","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"AfnJfq7e3w"},{"type":"text","value":" denotes the environment, and ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"JLpKOoySrD"},{"type":"inlineCode","value":"<env, e>","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"UK4dpB0ULQ"},{"type":"text","value":" is called a ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"XFIEW4WQfK"},{"type":"emphasis","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"machine configuration","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"jVhnMJ2AX3"}],"key":"LWcrk6XZFw"},{"type":"text","value":". That configuration represents the state of the computer as it evaluates a program: ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"wsepAnNohn"},{"type":"inlineCode","value":"env","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"Fx5YHkhIOO"},{"type":"text","value":" represents a part of the computer’s memory (the binding of variables to values), and ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"hhSJdxsfRT"},{"type":"inlineCode","value":"e","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"zwzZ3g6J3g"},{"type":"text","value":" represents the program.","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"e0VdoNYjFs"}],"key":"IFBGWHmSLL"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":24,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"inlineCode","value":"{}","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"i7A8YE9CwE"},{"type":"text","value":" represent the empty environment,","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"obK3bGaSLs"}],"key":"aM8q2HsNc6"},{"type":"listItem","spread":true,"position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"inlineCode","value":"{x1:v1, x2:v2, ...}","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"AUtRhDxvXC"},{"type":"text","value":" represent the environment that binds ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"Xi4GdnyYLL"},{"type":"inlineCode","value":"x1","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"xYo8s2OmfB"},{"type":"text","value":" to ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"p9FiLbBpV1"},{"type":"inlineCode","value":"v1","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"qWfc6M1Ky9"},{"type":"text","value":", etc.","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"aVUjRmRyXY"}],"key":"M3EG9LKbDp"},{"type":"listItem","spread":true,"position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"inlineCode","value":"env[x -> v]","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"SmfoKR5HM8"},{"type":"text","value":" represent the environment ","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"unRXEwhBJ5"},{"type":"inlineCode","value":"env","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"SpgO12gryr"},{"type":"text","value":" with the variable ","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"GFRHsJe3YE"},{"type":"inlineCode","value":"x","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"rvosT0UEw6"},{"type":"text","value":" additionally bound to the value ","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"uJSU1XLvDb"},{"type":"inlineCode","value":"v","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"rhW0c81cXE"}],"key":"x3l1EWTLU4"},{"type":"listItem","spread":true,"position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"inlineCode","value":"env(x)","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"cr6ch9asm1"},{"type":"text","value":" represent the binding of ","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"wlvVMA5ozh"},{"type":"inlineCode","value":"x","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"rCpoVpCrCg"},{"type":"text","value":" in ","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"crDQJ6fczV"},{"type":"inlineCode","value":"env","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"Pp81utlaJx"},{"type":"text","value":".","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"debwdhqVJB"}],"key":"q704t7xhPV"}],"key":"MLXbv5dyL8"}],"key":"KD48KF12Wl"},{"type":"heading","depth":2,"position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"text","value":"Evaluation","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"key":"TNofIDUUkQ"}],"identifier":"evaluation","label":"Evaluation","html_id":"evaluation","implicit":true,"key":"WRxLUAQo5r"},{"type":"paragraph","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"Trivially,","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"Yvga7zd0ZS"}],"key":"ERRPa9YIJp"},{"type":"code","lang":"Ocaml","value":"<env, x> ==> env(x)\n<env, fun x -> e> ==> fun x -> e","position":{"start":{"line":33,"column":1},"end":{"line":36,"column":1}},"key":"WsXYgrre6G"},{"type":"heading","depth":3,"position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"children":[{"type":"text","value":"Problem","position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"key":"xnhQ1zmzR8"}],"identifier":"problem","label":"Problem","html_id":"problem","implicit":true,"key":"IV6enuvyQ9"},{"type":"paragraph","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"children":[{"type":"text","value":"However, when we try to define the rules of function application, we run into trouble. Intuitively, we would write something like this, where we sort of “substitute” all the occurrences of ","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"DUBHbwH9MB"},{"type":"inlineCode","value":"x","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"jyGUCHKQAO"},{"type":"text","value":" in ","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"yCme63s0QX"},{"type":"inlineCode","value":"e","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"Wdu2eclXVl"},{"type":"text","value":" with ","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"Eu2wtET1Ue"},{"type":"inlineCode","value":"v2","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"kgkkMonq9C"},{"type":"text","value":" and get the result ","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"BKfIw7guJP"},{"type":"inlineCode","value":"v","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"cZndzB4dQR"},{"type":"text","value":".","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"ob7M1tx1SG"}],"key":"KzlvpfIySw"},{"type":"code","lang":"","value":"<env, e1 e2> ==> v\n  if <env, e1> ==> fun x -> e\n  and <env, e2> ==> v2\n  and <env[x -> v2], e> ==> v","position":{"start":{"line":42,"column":1},"end":{"line":47,"column":1}},"key":"tWsrkkOzsj"},{"type":"blockquote","position":{"start":{"line":49,"column":1},"end":{"line":74,"column":1}},"children":[{"type":"code","lang":"ocaml","value":"let x = 1 in\nlet f = fun y -> x in\nlet x = 2 in\nf 0","position":{"start":{"line":49,"column":1},"end":{"line":54,"column":1}},"key":"N3SYgqg5NJ"},{"type":"paragraph","position":{"start":{"line":56,"column":1},"end":{"line":56,"column":1}},"children":[{"type":"text","value":"According to our semantics thus far, it would evaluate as follows:","position":{"start":{"line":56,"column":1},"end":{"line":56,"column":1}},"key":"sN3AbRxv3O"}],"key":"mOUPPv8knd"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":58,"column":1},"end":{"line":74,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":58,"column":1},"end":{"line":59,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"children":[{"type":"inlineCode","value":"let x = 1","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"Zt3aZNOylU"},{"type":"text","value":" would produce the environment ","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"ggrtie6pY9"},{"type":"inlineCode","value":"{x:1}","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"UGVRuSGWKI"},{"type":"text","value":".","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"WoZ5uXR3v8"}],"key":"cfPKEYZOfV"}],"key":"xXyw3y8Q23"},{"type":"listItem","spread":true,"position":{"start":{"line":60,"column":1},"end":{"line":61,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"children":[{"type":"inlineCode","value":"let f = fun y -> x","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"ECAo7S02jg"},{"type":"text","value":" would produce the environment ","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"YbGuOssnEj"},{"type":"inlineCode","value":"{x:1, f:(fun y -> x)}","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"IiZ14zdt5m"},{"type":"text","value":".","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"MEECJKr9jY"}],"key":"HCc8ds0waJ"}],"key":"ith8G4Pqk6"},{"type":"listItem","spread":true,"position":{"start":{"line":62,"column":1},"end":{"line":63,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"children":[{"type":"inlineCode","value":"let x = 2","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"em5OB7tXgR"},{"type":"text","value":" would produce the environment ","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"wSTAVcTCPt"},{"type":"inlineCode","value":"{x:2, f:(fun y -> x)}","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"M68SWRRnXE"},{"type":"text","value":". Note how the binding of ","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"APdDiwgrLI"},{"type":"inlineCode","value":"x","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"ClIapiQDYW"},{"type":"text","value":" to ","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"NcG6J0xav0"},{"type":"inlineCode","value":"1","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"eTL1YdelGq"},{"type":"text","value":" is shadowed by the new binding.","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"rrGwyDuNsg"}],"key":"ScW4p6uEhy"}],"key":"vlSWAh1hQX"},{"type":"listItem","spread":true,"position":{"start":{"line":64,"column":1},"end":{"line":73,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"children":[{"type":"text","value":"Now we would evaluate ","position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"key":"u6qC547eQ8"},{"type":"inlineCode","value":"<{x:2, f:(fun y -> x)}, f 0>","position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"key":"LtB46KDqeM"}],"key":"H57W8u7goe"},{"type":"code","lang":"ocaml","value":"<{x:2, f:(fun y -> x)}, f 0> ==> 2\n  because <{x:2, f:(fun y -> x)}, f> ==> fun y -> x\n  and <{x:2, f:(fun y -> x)}, 0> ==> 0\n  and <{x:2, f:(fun y -> x)}[y -> 0], x> ==> 2`\n    because <{x:2, f:(fun y -> x), y:0}, x> ==> 2`","position":{"start":{"line":66,"column":1},"end":{"line":72,"column":1}},"key":"Q5pLVNNQKQ"}],"key":"iaGND8NTaU"},{"type":"listItem","spread":true,"position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"children":[{"type":"text","value":"The result is therefore ","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"key":"wN93gyWDS6"},{"type":"inlineCode","value":"2","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"key":"w7RNSS3mXt"},{"type":"text","value":".","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"key":"GqGYbxrEoz"}],"key":"Qn9OHNAWJk"}],"key":"PPum1vKcd7"}],"key":"HHyPF0ubxd"}],"key":"mncWgE4NlY"},{"type":"paragraph","position":{"start":{"line":76,"column":1},"end":{"line":76,"column":1}},"children":[{"type":"text","value":"However, this should evaluate to 1. Notice that we evaluated e1 in the current environment, or more formally, we used a dynamic scope here.","position":{"start":{"line":76,"column":1},"end":{"line":76,"column":1}},"key":"MNEdCy1tCb"}],"key":"UhwdFGMlDx"},{"type":"heading","depth":3,"position":{"start":{"line":78,"column":1},"end":{"line":78,"column":1}},"children":[{"type":"text","value":"Dynamic vs. Static Scope","position":{"start":{"line":78,"column":1},"end":{"line":78,"column":1}},"key":"mnhJTaJD1S"}],"identifier":"dynamic-vs-static-scope","label":"Dynamic vs. Static Scope","html_id":"dynamic-vs-static-scope","implicit":true,"key":"a8RT5q9RA5"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":80,"column":1},"end":{"line":82,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"children":[{"type":"strong","position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"children":[{"type":"text","value":"Dynamic Scope","position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"key":"RBx1QpO6bv"}],"key":"VvnpGl3TI7"},{"type":"text","value":": the body of a function is evaluated in the current dynamic environment at the time the function is ","position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"key":"yhUBLrnndx"},{"type":"strong","position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"children":[{"type":"text","value":"called","position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"key":"opphRng33t"}],"key":"FQ2yPdxRMD"},{"type":"text","value":", i.e. it uses the latest binding","position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"key":"ajutsK0AHc"}],"key":"CACMBINY3z"},{"type":"listItem","spread":true,"position":{"start":{"line":81,"column":1},"end":{"line":82,"column":1}},"children":[{"type":"strong","position":{"start":{"line":81,"column":1},"end":{"line":81,"column":1}},"children":[{"type":"text","value":"Lexical Scope","position":{"start":{"line":81,"column":1},"end":{"line":81,"column":1}},"key":"C9wCvWySbs"}],"key":"e0PL3R0rEs"},{"type":"text","value":": the body of a function is evaluated in the old dynamic environment that existed at the time the function was ","position":{"start":{"line":81,"column":1},"end":{"line":81,"column":1}},"key":"a2hX0e9BGo"},{"type":"strong","position":{"start":{"line":81,"column":1},"end":{"line":81,"column":1}},"children":[{"type":"text","value":"defined","position":{"start":{"line":81,"column":1},"end":{"line":81,"column":1}},"key":"gyIaBaeYTb"}],"key":"X8xXj7PzZx"},{"type":"text","value":".","position":{"start":{"line":81,"column":1},"end":{"line":81,"column":1}},"key":"hn38Rg0iQ9"}],"key":"UwH32ud2kT"}],"key":"nSuf4yTmXf"},{"type":"paragraph","position":{"start":{"line":83,"column":1},"end":{"line":83,"column":1}},"children":[{"type":"text","value":"Most modern languages use lexical scope.","position":{"start":{"line":83,"column":1},"end":{"line":83,"column":1}},"key":"RY7zXym3tE"}],"key":"Sh4WCnkZN2"},{"type":"heading","depth":3,"position":{"start":{"line":85,"column":1},"end":{"line":85,"column":1}},"children":[{"type":"text","value":"Implementing Time Travel","position":{"start":{"line":85,"column":1},"end":{"line":85,"column":1}},"key":"XJ9N4KshrK"}],"identifier":"implementing-time-travel","label":"Implementing Time Travel","html_id":"implementing-time-travel","implicit":true,"key":"JtAEjlTcnx"},{"type":"paragraph","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"children":[{"type":"text","value":"We have to store the variable binding at the time the function was defined. We define a new data structure called “closure” with two parts: ","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"key":"vGIwxp25ws"},{"type":"inlineCode","value":"(|exp, env|)","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"key":"pIKMwBw3G4"},{"type":"text","value":", where ","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"key":"rObfTixpYa"},{"type":"inlineCode","value":"exp","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"key":"PosWI0dzg7"},{"type":"text","value":" is the expression we are concerned about, and ","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"key":"HfWjLPKb8N"},{"type":"inlineCode","value":"env","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"key":"vtwTf0unOT"},{"type":"text","value":" the environment when the expression was defined.","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"key":"DJtHfIxCcV"}],"key":"pqdD4nBomR"},{"type":"paragraph","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"children":[{"type":"text","value":"Since we only have to consider scope in function application, the ","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"CH0XejvZ44"},{"type":"inlineCode","value":"exp","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"SqnC0zi7B5"},{"type":"text","value":" in our closure must always be a function, denoted by ","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"fpigEOO93G"},{"type":"inlineCode","value":"fun x -> e","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"AUYYBXn8EV"},{"type":"text","value":". Therefore, we can also write our closure as ","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"Zi7vSE7V0h"},{"type":"inlineCode","value":"(|x, exp, env|)","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"FbkTztI7yG"},{"type":"text","value":", where ","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"pjz4m54SUH"},{"type":"inlineCode","value":"x","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"wu0iNRlHLa"},{"type":"text","value":" is the argument name, ","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"zKclE3va6C"},{"type":"inlineCode","value":"e","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"VxWNu6BD72"},{"type":"text","value":" is the function body, and ","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"bXmK1egVdR"},{"type":"inlineCode","value":"env","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"wumjRPVwyo"},{"type":"text","value":" is the environment when this function was defined. In fact, that’s how we define it when implementing the Environment Model.","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"MG1EiDn50P"}],"key":"m1WlhINr3y"},{"type":"paragraph","position":{"start":{"line":91,"column":1},"end":{"line":91,"column":1}},"children":[{"type":"text","value":"When we use big-step relation in evaluation, we say the result must be a value. Here, we can consider ","position":{"start":{"line":91,"column":1},"end":{"line":91,"column":1}},"key":"Ri2u97PV3t"},{"type":"emphasis","position":{"start":{"line":91,"column":1},"end":{"line":91,"column":1}},"children":[{"type":"text","value":"closure","position":{"start":{"line":91,"column":1},"end":{"line":91,"column":1}},"key":"MxrHeOdd3L"}],"key":"xeusv8aVcX"},{"type":"text","value":" to be the value evaluated from a function. ","position":{"start":{"line":91,"column":1},"end":{"line":91,"column":1}},"key":"axMC1yjbGV"},{"type":"inlineCode","value":"<env, fun x -> e> ==> (| fun x -> e, env |)","position":{"start":{"line":91,"column":1},"end":{"line":91,"column":1}},"key":"QEdiQUSiIR"}],"key":"E0HwNFdJ11"},{"type":"paragraph","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"children":[{"type":"text","value":"Using closure, we can now correctly define evaluation of function applications. (","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"key":"BeZ2XWEF9H"},{"type":"inlineCode","value":"defenv","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"key":"tCxOWlKSAk"},{"type":"text","value":" represents the environment when ","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"key":"Ns16ugch1Y"},{"type":"inlineCode","value":"e1","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"key":"Pki8heYecb"},{"type":"text","value":" was defined)","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"key":"YefTDvPYqe"}],"key":"tZCscT3z4t"},{"type":"code","lang":"Ocaml","value":"<env, e1 e2> ==> v\n  if <env, e1> ==> (| fun x -> e, defenv |)\n  and <env, e2> ==> v2\n  and <defenv[x -> v2], e> ==> v","position":{"start":{"line":95,"column":1},"end":{"line":100,"column":1}},"key":"Uzx8I2fZjx"}],"key":"VrnmfyO2YN"}],"key":"x6oey2hJ2z"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"The Substitution Model","url":"/2020-04-14-the-substitution-model","group":"CS3110 Functional Programming"},"next":{"title":"Machine Learning Basics","url":"/2021-08-31-machine-learning-basics","group":"CS4780 Intro to Machine Learning"}}},"domain":"http://localhost:3000"}