{"version":2,"kind":"Article","sha256":"bb19946182a0a22b66464c126bdf898df44994d7cfee9a4fcd7ba51663b1d43b","slug":"2020-04-16-the-environment-model","location":"/CS3110/2020-04-16-The-Environment-Model.md","dependencies":[],"frontmatter":{"title":"The Environment Model","tags":["Cornell","20SP","CS3110"],"date":"2020-04-16","numbering":{"title":{"offset":1}},"exports":[{"format":"md","filename":"2020-04-16-The-Environment-Model.md","url":"/build/2020-04-16-The-Envir-89d2e03b93402e5695b8f4b1e184bcc3.md"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Step Relation","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"iDHYpamaJR"}],"identifier":"step-relation","label":"Step Relation","html_id":"step-relation","implicit":true,"key":"DrqvJiYtS1"},{"type":"paragraph","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"General Rules: don’t step on values; don’t step on variables","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"E84dludlpC"}],"key":"OAMFt1yS4X"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":14,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"strong","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Small/Single Step Relation","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"ZNEbxGYzeM"}],"key":"xEXrrlMYxU"},{"type":"text","value":": ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"GVyr9OHRCx"},{"type":"inlineCode","value":"e --> e'","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"EiOUouD5Z4"},{"type":"text","value":", where e’ can be a value or another expression yet to be evaluated to a value","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"l4z4cINXYb"}],"key":"PaagN5vo8L"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"strong","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Multi-Step Relation","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"j9nHBYbFRb"}],"key":"f3MtpVcTF6"},{"type":"text","value":": ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"Ak087JU5pr"},{"type":"inlineCode","value":"e -->* e'","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"Xk0g8TtnCE"},{"type":"text","value":" is the reflexive closure of single step. It allows single step to be performed 0 or multiple times","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"cM0BC0lydU"}],"key":"gH9CwBTiPN"},{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"strong","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Big-Step Relation","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"f6zzDGEkSE"}],"key":"mgCe61eND2"},{"type":"text","value":": ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"FbWKXgdiDl"},{"type":"inlineCode","value":"e ==> v","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"AM4ZGzupmM"},{"type":"text","value":" step expressions to values through multi-step and stop when it becomes values.","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"vBA6gJvQCE"}],"key":"t1xWNIQ8Hp"}],"key":"w2DJX4yzIp"},{"type":"heading","depth":2,"position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"link","url":"https://www.cs.cornell.edu/courses/cs3110/2020sp/textbook/interp/env_model.html","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Introduction","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"LYaqS55JCS"}],"urlSource":"https://www.cs.cornell.edu/courses/cs3110/2020sp/textbook/interp/env_model.html","key":"IoR8M7pD2E"}],"identifier":"introduction","label":"Introduction","html_id":"introduction","implicit":true,"key":"W01kp9TQJ2"},{"type":"blockquote","position":{"start":{"line":20,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"For sake of efficiency, it would be better to substitute ","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"bmSDZ9b6jb"},{"type":"emphasis","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"lazily","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"qfMyJm1diP"}],"key":"W7Qg9llv6Y"},{"type":"text","value":": only when the value of a variable is needed should the interpreter have to do the substitution. That’s the key idea behind the ","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"fLlJZ3C46t"},{"type":"emphasis","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"environment model","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"LLZ77lFu5w"}],"key":"e4SqajyQC9"},{"type":"text","value":". In this model, there is a data structure called the ","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"MgHpnBgvx3"},{"type":"emphasis","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"dynamic environment","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"lHYPSwrZZ9"}],"key":"A5843kZb1u"},{"type":"text","value":", which is a dictionary mapping variable names to values. Whenever the value of a variable is needed, it’s looked up in that dictionary. （空间换时间）","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"vJveL4pLeu"}],"key":"ZuvrjcHjWi"},{"type":"paragraph","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"Instead of ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"s1odNKqFcx"},{"type":"inlineCode","value":"e ==> v","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"qtZDemQfiR"},{"type":"text","value":", we now have ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"UesUednkLb"},{"type":"inlineCode","value":"<env, e> ==> v","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"OYUAx6YnBQ"},{"type":"text","value":", where ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"oQclDoX9Rh"},{"type":"inlineCode","value":"env","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"o8N5sgZUcS"},{"type":"text","value":" denotes the environment, and ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"uOkbMF34eL"},{"type":"inlineCode","value":"<env, e>","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"OAmtN6vMjr"},{"type":"text","value":" is called a ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"d2Hj7ULRVe"},{"type":"emphasis","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"machine configuration","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"Zj0z7NM8bx"}],"key":"MJoeZ4uaK0"},{"type":"text","value":". That configuration represents the state of the computer as it evaluates a program: ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"NInY8GAIat"},{"type":"inlineCode","value":"env","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"I0Cw8Wvf1K"},{"type":"text","value":" represents a part of the computer’s memory (the binding of variables to values), and ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"FH6m9lh3ah"},{"type":"inlineCode","value":"e","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"kov5WUg11Q"},{"type":"text","value":" represents the program.","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"tVg6M3cIZR"}],"key":"enEbgsQJ77"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":24,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"inlineCode","value":"{}","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"F7Qx9ZKwSx"},{"type":"text","value":" represent the empty environment,","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"ydI8I8Fu3S"}],"key":"aTdetm7u4s"},{"type":"listItem","spread":true,"position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"inlineCode","value":"{x1:v1, x2:v2, ...}","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"OPc36mcSgs"},{"type":"text","value":" represent the environment that binds ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"Ro6F5EkyFj"},{"type":"inlineCode","value":"x1","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"w749h80UOW"},{"type":"text","value":" to ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"ZJMbJOn7mB"},{"type":"inlineCode","value":"v1","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"AFf3IUpE3w"},{"type":"text","value":", etc.","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"adoKcgmYj7"}],"key":"YEK43CV9Yf"},{"type":"listItem","spread":true,"position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"inlineCode","value":"env[x -> v]","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"U0sgZIYxa5"},{"type":"text","value":" represent the environment ","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"UW0mmhikR7"},{"type":"inlineCode","value":"env","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"lZ5nMcKECS"},{"type":"text","value":" with the variable ","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"jaNvoIYYSF"},{"type":"inlineCode","value":"x","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"tBgDY3LtkC"},{"type":"text","value":" additionally bound to the value ","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"vKYnmyWTg1"},{"type":"inlineCode","value":"v","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"EncnLZs4Av"}],"key":"r4v4dGu72n"},{"type":"listItem","spread":true,"position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"inlineCode","value":"env(x)","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"kECSsMIGHj"},{"type":"text","value":" represent the binding of ","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"trvdwNWtRI"},{"type":"inlineCode","value":"x","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"ASPNvRUiDr"},{"type":"text","value":" in ","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"TbISSSsltM"},{"type":"inlineCode","value":"env","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"qM7Z9pJ9js"},{"type":"text","value":".","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"A8FfJgfoKB"}],"key":"KbyiZwOemp"}],"key":"Mf5rHMY4B2"}],"key":"X5D9nFCVsV"},{"type":"heading","depth":2,"position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"text","value":"Evaluation","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"key":"KWbCDJo6KK"}],"identifier":"evaluation","label":"Evaluation","html_id":"evaluation","implicit":true,"key":"vfR0IR4hL7"},{"type":"paragraph","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"Trivially,","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"Kizm7Zk8JB"}],"key":"orHwFVQKVW"},{"type":"code","lang":"Ocaml","value":"<env, x> ==> env(x)\n<env, fun x -> e> ==> fun x -> e","position":{"start":{"line":33,"column":1},"end":{"line":36,"column":1}},"key":"IRNHyjnBKd"},{"type":"heading","depth":3,"position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"children":[{"type":"text","value":"Problem","position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"key":"uhcZjISIz9"}],"identifier":"problem","label":"Problem","html_id":"problem","implicit":true,"key":"FsRMvyd0uP"},{"type":"paragraph","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"children":[{"type":"text","value":"However, when we try to define the rules of function application, we run into trouble. Intuitively, we would write something like this, where we sort of “substitute” all the occurrences of ","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"iifKneQ1V9"},{"type":"inlineCode","value":"x","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"Y9zNhjNfH0"},{"type":"text","value":" in ","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"NPpId3U0FL"},{"type":"inlineCode","value":"e","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"A8CpYy1Eaz"},{"type":"text","value":" with ","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"yDkDeU8PEw"},{"type":"inlineCode","value":"v2","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"UAwcjlmKc0"},{"type":"text","value":" and get the result ","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"Uc3ynDPcQh"},{"type":"inlineCode","value":"v","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"KplwN3EYcp"},{"type":"text","value":".","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"NaN4ZU5Qlk"}],"key":"M1JeHOjBOf"},{"type":"code","lang":"","value":"<env, e1 e2> ==> v\n  if <env, e1> ==> fun x -> e\n  and <env, e2> ==> v2\n  and <env[x -> v2], e> ==> v","position":{"start":{"line":42,"column":1},"end":{"line":47,"column":1}},"key":"CHKVe2xCV3"},{"type":"blockquote","position":{"start":{"line":49,"column":1},"end":{"line":74,"column":1}},"children":[{"type":"code","lang":"ocaml","value":"let x = 1 in\nlet f = fun y -> x in\nlet x = 2 in\nf 0","position":{"start":{"line":49,"column":1},"end":{"line":54,"column":1}},"key":"MY9S50gPlf"},{"type":"paragraph","position":{"start":{"line":56,"column":1},"end":{"line":56,"column":1}},"children":[{"type":"text","value":"According to our semantics thus far, it would evaluate as follows:","position":{"start":{"line":56,"column":1},"end":{"line":56,"column":1}},"key":"dUzWuy4Nu6"}],"key":"RRoKc5ttfv"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":58,"column":1},"end":{"line":74,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":58,"column":1},"end":{"line":59,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"children":[{"type":"inlineCode","value":"let x = 1","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"BU1uG0MURr"},{"type":"text","value":" would produce the environment ","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"CBrYnOg7rX"},{"type":"inlineCode","value":"{x:1}","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"GbiVj5RedV"},{"type":"text","value":".","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"uzVD9krxFA"}],"key":"rW3QKnv32n"}],"key":"eOERsJsBhj"},{"type":"listItem","spread":true,"position":{"start":{"line":60,"column":1},"end":{"line":61,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"children":[{"type":"inlineCode","value":"let f = fun y -> x","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"LeWS4eORsU"},{"type":"text","value":" would produce the environment ","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"fV4UfhYCRQ"},{"type":"inlineCode","value":"{x:1, f:(fun y -> x)}","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"QygkFnnJax"},{"type":"text","value":".","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"j7naLHkW9u"}],"key":"sdG2o2WcKa"}],"key":"NPH33k4BIU"},{"type":"listItem","spread":true,"position":{"start":{"line":62,"column":1},"end":{"line":63,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"children":[{"type":"inlineCode","value":"let x = 2","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"NTtWxzgm0R"},{"type":"text","value":" would produce the environment ","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"zSsCCJ68pi"},{"type":"inlineCode","value":"{x:2, f:(fun y -> x)}","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"vjZRlarAJj"},{"type":"text","value":". Note how the binding of ","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"jhEEXNSdJB"},{"type":"inlineCode","value":"x","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"FFyQ7Wx5PM"},{"type":"text","value":" to ","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"nLHjKM2Qaw"},{"type":"inlineCode","value":"1","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"ZvVeDOKMWv"},{"type":"text","value":" is shadowed by the new binding.","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"eaO0016O3R"}],"key":"PMAuho7tH1"}],"key":"Sy5iuKO7uO"},{"type":"listItem","spread":true,"position":{"start":{"line":64,"column":1},"end":{"line":73,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"children":[{"type":"text","value":"Now we would evaluate ","position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"key":"K9Ih4hV47z"},{"type":"inlineCode","value":"<{x:2, f:(fun y -> x)}, f 0>","position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"key":"pM2lAmTCUP"}],"key":"JyomqBFfyy"},{"type":"code","lang":"ocaml","value":"<{x:2, f:(fun y -> x)}, f 0> ==> 2\n  because <{x:2, f:(fun y -> x)}, f> ==> fun y -> x\n  and <{x:2, f:(fun y -> x)}, 0> ==> 0\n  and <{x:2, f:(fun y -> x)}[y -> 0], x> ==> 2`\n    because <{x:2, f:(fun y -> x), y:0}, x> ==> 2`","position":{"start":{"line":66,"column":1},"end":{"line":72,"column":1}},"key":"xcxd0sUZh8"}],"key":"I7KVwsGhAh"},{"type":"listItem","spread":true,"position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"children":[{"type":"text","value":"The result is therefore ","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"key":"pHdzqk4mpD"},{"type":"inlineCode","value":"2","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"key":"PJwVLQNdtO"},{"type":"text","value":".","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"key":"yPYLClt1dE"}],"key":"AieoqjcCsA"}],"key":"wO08Kfy52b"}],"key":"nDJsRNQjtE"}],"key":"W69hlv5ON6"},{"type":"paragraph","position":{"start":{"line":76,"column":1},"end":{"line":76,"column":1}},"children":[{"type":"text","value":"However, this should evaluate to 1. Notice that we evaluated e1 in the current environment, or more formally, we used a dynamic scope here.","position":{"start":{"line":76,"column":1},"end":{"line":76,"column":1}},"key":"xeSDAXpyFu"}],"key":"rgVZHOFMqv"},{"type":"heading","depth":3,"position":{"start":{"line":78,"column":1},"end":{"line":78,"column":1}},"children":[{"type":"text","value":"Dynamic vs. Static Scope","position":{"start":{"line":78,"column":1},"end":{"line":78,"column":1}},"key":"SbQk2KA6IN"}],"identifier":"dynamic-vs-static-scope","label":"Dynamic vs. Static Scope","html_id":"dynamic-vs-static-scope","implicit":true,"key":"l3zebei2BR"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":80,"column":1},"end":{"line":82,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"children":[{"type":"strong","position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"children":[{"type":"text","value":"Dynamic Scope","position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"key":"qOPB9xX9HL"}],"key":"V8KD1aCYXF"},{"type":"text","value":": the body of a function is evaluated in the current dynamic environment at the time the function is ","position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"key":"mfGJxpA6cK"},{"type":"strong","position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"children":[{"type":"text","value":"called","position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"key":"MVyas918vI"}],"key":"xMorCo7GZ8"},{"type":"text","value":", i.e. it uses the latest binding","position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"key":"wtC3c6K93O"}],"key":"IsTHxm9kkU"},{"type":"listItem","spread":true,"position":{"start":{"line":81,"column":1},"end":{"line":82,"column":1}},"children":[{"type":"strong","position":{"start":{"line":81,"column":1},"end":{"line":81,"column":1}},"children":[{"type":"text","value":"Lexical Scope","position":{"start":{"line":81,"column":1},"end":{"line":81,"column":1}},"key":"r5NEYW1uYO"}],"key":"dJTOxF6szy"},{"type":"text","value":": the body of a function is evaluated in the old dynamic environment that existed at the time the function was ","position":{"start":{"line":81,"column":1},"end":{"line":81,"column":1}},"key":"v9nwreg953"},{"type":"strong","position":{"start":{"line":81,"column":1},"end":{"line":81,"column":1}},"children":[{"type":"text","value":"defined","position":{"start":{"line":81,"column":1},"end":{"line":81,"column":1}},"key":"FndlkcnwvS"}],"key":"FwFpy8Xf7f"},{"type":"text","value":".","position":{"start":{"line":81,"column":1},"end":{"line":81,"column":1}},"key":"Cw2F1k57kv"}],"key":"nnM20ksL0i"}],"key":"asWsBQbP9y"},{"type":"paragraph","position":{"start":{"line":83,"column":1},"end":{"line":83,"column":1}},"children":[{"type":"text","value":"Most modern languages use lexical scope.","position":{"start":{"line":83,"column":1},"end":{"line":83,"column":1}},"key":"lIT8lIsz6M"}],"key":"yjVHbCtSGI"},{"type":"heading","depth":3,"position":{"start":{"line":85,"column":1},"end":{"line":85,"column":1}},"children":[{"type":"text","value":"Implementing Time Travel","position":{"start":{"line":85,"column":1},"end":{"line":85,"column":1}},"key":"Q5Vgagsw9T"}],"identifier":"implementing-time-travel","label":"Implementing Time Travel","html_id":"implementing-time-travel","implicit":true,"key":"WrxcUuh7Bh"},{"type":"paragraph","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"children":[{"type":"text","value":"We have to store the variable binding at the time the function was defined. We define a new data structure called “closure” with two parts: ","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"key":"rcR3mxKF0p"},{"type":"inlineCode","value":"(|exp, env|)","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"key":"gZdAMI8Lqd"},{"type":"text","value":", where ","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"key":"qUZAp0WxPL"},{"type":"inlineCode","value":"exp","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"key":"UhBjiVLPnE"},{"type":"text","value":" is the expression we are concerned about, and ","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"key":"xs5C7PZ3wn"},{"type":"inlineCode","value":"env","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"key":"VLvawY1AsB"},{"type":"text","value":" the environment when the expression was defined.","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"key":"kQhANlNpw9"}],"key":"Wya0HIxTQR"},{"type":"paragraph","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"children":[{"type":"text","value":"Since we only have to consider scope in function application, the ","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"F2NMq4YpaP"},{"type":"inlineCode","value":"exp","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"sAxET7aoKZ"},{"type":"text","value":" in our closure must always be a function, denoted by ","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"wrQJlF4V25"},{"type":"inlineCode","value":"fun x -> e","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"Y27L6VDKpG"},{"type":"text","value":". Therefore, we can also write our closure as ","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"D9jjRh7pRQ"},{"type":"inlineCode","value":"(|x, exp, env|)","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"iRevtqokS0"},{"type":"text","value":", where ","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"uHDfwPRhCC"},{"type":"inlineCode","value":"x","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"zSaalFs1iD"},{"type":"text","value":" is the argument name, ","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"zUINoPtXBa"},{"type":"inlineCode","value":"e","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"KT6EgwwcXQ"},{"type":"text","value":" is the function body, and ","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"wuOBA9L9xK"},{"type":"inlineCode","value":"env","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"bIbfcGoh8v"},{"type":"text","value":" is the environment when this function was defined. In fact, that’s how we define it when implementing the Environment Model.","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"rJph76UwPJ"}],"key":"wqgtn6aqxF"},{"type":"paragraph","position":{"start":{"line":91,"column":1},"end":{"line":91,"column":1}},"children":[{"type":"text","value":"When we use big-step relation in evaluation, we say the result must be a value. Here, we can consider ","position":{"start":{"line":91,"column":1},"end":{"line":91,"column":1}},"key":"a5CRHdHAW6"},{"type":"emphasis","position":{"start":{"line":91,"column":1},"end":{"line":91,"column":1}},"children":[{"type":"text","value":"closure","position":{"start":{"line":91,"column":1},"end":{"line":91,"column":1}},"key":"XKu1KGxu0h"}],"key":"cuMCb7KKhi"},{"type":"text","value":" to be the value evaluated from a function. ","position":{"start":{"line":91,"column":1},"end":{"line":91,"column":1}},"key":"aS1Z9iX9aw"},{"type":"inlineCode","value":"<env, fun x -> e> ==> (| fun x -> e, env |)","position":{"start":{"line":91,"column":1},"end":{"line":91,"column":1}},"key":"Twb17AuT1p"}],"key":"uMrfrppNzB"},{"type":"paragraph","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"children":[{"type":"text","value":"Using closure, we can now correctly define evaluation of function applications. (","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"key":"ufie0KGvcN"},{"type":"inlineCode","value":"defenv","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"key":"wGRqKwEC08"},{"type":"text","value":" represents the environment when ","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"key":"F8AN1MNAj2"},{"type":"inlineCode","value":"e1","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"key":"kvWIhdQPei"},{"type":"text","value":" was defined)","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"key":"rJGi9yh5mK"}],"key":"bezbELae7y"},{"type":"code","lang":"Ocaml","value":"<env, e1 e2> ==> v\n  if <env, e1> ==> (| fun x -> e, defenv |)\n  and <env, e2> ==> v2\n  and <defenv[x -> v2], e> ==> v","position":{"start":{"line":95,"column":1},"end":{"line":100,"column":1}},"key":"MTg0xTxLDZ"}],"key":"CnHBO6p8eX"}],"key":"cFozomvpJJ"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"The Substitution Model","url":"/2020-04-14-the-substitution-model","group":"C S3110"},"next":{"title":"Machine Learning Basics","url":"/2021-08-31-machine-learning-basics","group":"C S4780"}}},"domain":"http://localhost:3000"}