{"version":2,"kind":"Article","sha256":"bb19946182a0a22b66464c126bdf898df44994d7cfee9a4fcd7ba51663b1d43b","slug":"2020-04-16-the-environment-model","location":"/CS3110/2020-04-16-The-Environment-Model.md","dependencies":[],"frontmatter":{"title":"The Environment Model","tags":["Cornell","20SP","CS3110"],"date":"2020-04-16","authors":[{"nameParsed":{"literal":"Yao Lirong","given":"Yao","family":"Lirong"},"name":"Yao Lirong","affiliations":["Cornell University"],"url":"https://yao-lirong.github.io","linkedin":"https://www.linkedin.com/in/yao-lirong/","id":"contributors-myst-generated-uid-0"}],"keywords":["Cornell","CS","Yao Lirong"],"affiliations":[{"id":"Cornell University","name":"Cornell University"}],"numbering":{"title":{"offset":1}},"exports":[{"format":"md","filename":"2020-04-16-The-Environment-Model.md","url":"/cornell-notes/build/2020-04-16-The-Envir-7f025c10bc224919399845cc789f2614.md"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Step Relation","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"V3ohhtjOWS"}],"identifier":"step-relation","label":"Step Relation","html_id":"step-relation","implicit":true,"key":"E1cu2R6Fr3"},{"type":"paragraph","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"General Rules: don’t step on values; don’t step on variables","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"WgD1LCEVUo"}],"key":"O4YqMDkmdL"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":14,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"strong","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Small/Single Step Relation","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"PCAVwIOem5"}],"key":"zpMITCjA2l"},{"type":"text","value":": ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"NALUnUqvv7"},{"type":"inlineCode","value":"e --> e'","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"K53RODwZdn"},{"type":"text","value":", where e’ can be a value or another expression yet to be evaluated to a value","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"xZu1BxaulW"}],"key":"zI95zBr8rH"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"strong","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Multi-Step Relation","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"Vy7UtOrNMd"}],"key":"s1StfsKSco"},{"type":"text","value":": ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"dh0uWnRWX0"},{"type":"inlineCode","value":"e -->* e'","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"WHUuIwLip9"},{"type":"text","value":" is the reflexive closure of single step. It allows single step to be performed 0 or multiple times","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"V6yLcwzQu5"}],"key":"pqWblmmrGF"},{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"strong","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Big-Step Relation","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"VLgLkMdiXL"}],"key":"HVO9JSrFDb"},{"type":"text","value":": ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"Vtf4GTy2av"},{"type":"inlineCode","value":"e ==> v","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"FfR1A8e3IE"},{"type":"text","value":" step expressions to values through multi-step and stop when it becomes values.","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"rAQ8vsSUXN"}],"key":"A57OtlNx9l"}],"key":"nJLxVQlAbf"},{"type":"heading","depth":2,"position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"link","url":"https://www.cs.cornell.edu/courses/cs3110/2020sp/textbook/interp/env_model.html","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Introduction","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"MlORXkDAGq"}],"urlSource":"https://www.cs.cornell.edu/courses/cs3110/2020sp/textbook/interp/env_model.html","key":"tUvI0OoJGe"}],"identifier":"introduction","label":"Introduction","html_id":"introduction","implicit":true,"key":"nOm7Ei8vsO"},{"type":"blockquote","position":{"start":{"line":20,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"For sake of efficiency, it would be better to substitute ","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"sm1X9GG3ji"},{"type":"emphasis","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"lazily","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"u3Ffetcq9m"}],"key":"NiIKOSF1dX"},{"type":"text","value":": only when the value of a variable is needed should the interpreter have to do the substitution. That’s the key idea behind the ","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"fdrldXXD5m"},{"type":"emphasis","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"environment model","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"nBpEzsxAq8"}],"key":"Yg87A3co8A"},{"type":"text","value":". In this model, there is a data structure called the ","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"lL7wLaTMqf"},{"type":"emphasis","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"dynamic environment","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"GftT9UFJko"}],"key":"mFOBetHi7J"},{"type":"text","value":", which is a dictionary mapping variable names to values. Whenever the value of a variable is needed, it’s looked up in that dictionary. （空间换时间）","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"KpJUArfRbE"}],"key":"tF0JUc3TNd"},{"type":"paragraph","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"Instead of ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"sQvzfylwTZ"},{"type":"inlineCode","value":"e ==> v","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"TpGIb9t2yh"},{"type":"text","value":", we now have ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"ICNGj18mjO"},{"type":"inlineCode","value":"<env, e> ==> v","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"tQ22ynRCGq"},{"type":"text","value":", where ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"x2VUSfoYGz"},{"type":"inlineCode","value":"env","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"TCcLC9Dzqu"},{"type":"text","value":" denotes the environment, and ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"HPWYuFwMDd"},{"type":"inlineCode","value":"<env, e>","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"EE7RVHODoH"},{"type":"text","value":" is called a ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"FWv6UjWISn"},{"type":"emphasis","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"machine configuration","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"l9T7VQybV1"}],"key":"MCgSFBmamL"},{"type":"text","value":". That configuration represents the state of the computer as it evaluates a program: ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"MD5x81V87i"},{"type":"inlineCode","value":"env","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"ONDSiEaPyT"},{"type":"text","value":" represents a part of the computer’s memory (the binding of variables to values), and ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"xSSdxyUg0Q"},{"type":"inlineCode","value":"e","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"tlcfiBB6n6"},{"type":"text","value":" represents the program.","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"ioXaUf5ah0"}],"key":"SyekL2fNQT"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":24,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"inlineCode","value":"{}","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"uJPurNaHRR"},{"type":"text","value":" represent the empty environment,","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"iekmaLA7CX"}],"key":"RX5w2RUDLn"},{"type":"listItem","spread":true,"position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"inlineCode","value":"{x1:v1, x2:v2, ...}","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"lBX8HiYFOZ"},{"type":"text","value":" represent the environment that binds ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"mGyv0g6v70"},{"type":"inlineCode","value":"x1","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"zLIeY8BgUU"},{"type":"text","value":" to ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"fXs3XwliyS"},{"type":"inlineCode","value":"v1","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"MHOXjdxEJa"},{"type":"text","value":", etc.","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"WCs8DcQXGs"}],"key":"W6eGtlGUuA"},{"type":"listItem","spread":true,"position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"inlineCode","value":"env[x -> v]","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"dt5BYxqoa9"},{"type":"text","value":" represent the environment ","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"EeP9ieiZeC"},{"type":"inlineCode","value":"env","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"PaAl2DnKhK"},{"type":"text","value":" with the variable ","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"Q7Xz5YxIY1"},{"type":"inlineCode","value":"x","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"wW0ilHq8Hg"},{"type":"text","value":" additionally bound to the value ","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"N8EoRCETe0"},{"type":"inlineCode","value":"v","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"XQwH2x41jr"}],"key":"zDRlkyLbHO"},{"type":"listItem","spread":true,"position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"inlineCode","value":"env(x)","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"aKPO1GAhhV"},{"type":"text","value":" represent the binding of ","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"RoPc0A5hUB"},{"type":"inlineCode","value":"x","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"OG7o79GmaW"},{"type":"text","value":" in ","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"lfTl0Y8285"},{"type":"inlineCode","value":"env","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"KXqR1XDv0W"},{"type":"text","value":".","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"U54ZV3yvJI"}],"key":"Hphb60x1IH"}],"key":"fgYx8gFbZ8"}],"key":"wrtqXeA9YJ"},{"type":"heading","depth":2,"position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"text","value":"Evaluation","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"key":"QhlelYI6UK"}],"identifier":"evaluation","label":"Evaluation","html_id":"evaluation","implicit":true,"key":"fMGuA9Ne3h"},{"type":"paragraph","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"Trivially,","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"vGW7anAeYF"}],"key":"PMU5NIK685"},{"type":"code","lang":"Ocaml","value":"<env, x> ==> env(x)\n<env, fun x -> e> ==> fun x -> e","position":{"start":{"line":33,"column":1},"end":{"line":36,"column":1}},"key":"BAeAUXkArv"},{"type":"heading","depth":3,"position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"children":[{"type":"text","value":"Problem","position":{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},"key":"u5SLCw4tCJ"}],"identifier":"problem","label":"Problem","html_id":"problem","implicit":true,"key":"SxOJIwv70t"},{"type":"paragraph","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"children":[{"type":"text","value":"However, when we try to define the rules of function application, we run into trouble. Intuitively, we would write something like this, where we sort of “substitute” all the occurrences of ","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"WRieGRIaIa"},{"type":"inlineCode","value":"x","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"BsHjinzP9H"},{"type":"text","value":" in ","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"zp1cui96HS"},{"type":"inlineCode","value":"e","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"ejRF12MvOX"},{"type":"text","value":" with ","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"Ww9NQrHbQo"},{"type":"inlineCode","value":"v2","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"cM2itIYrWH"},{"type":"text","value":" and get the result ","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"IvXkfUResx"},{"type":"inlineCode","value":"v","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"dAlIRgIBU4"},{"type":"text","value":".","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"KsSqBnHdtr"}],"key":"AJhFsJopC5"},{"type":"code","lang":"","value":"<env, e1 e2> ==> v\n  if <env, e1> ==> fun x -> e\n  and <env, e2> ==> v2\n  and <env[x -> v2], e> ==> v","position":{"start":{"line":42,"column":1},"end":{"line":47,"column":1}},"key":"sr8y7BHhT0"},{"type":"blockquote","position":{"start":{"line":49,"column":1},"end":{"line":74,"column":1}},"children":[{"type":"code","lang":"ocaml","value":"let x = 1 in\nlet f = fun y -> x in\nlet x = 2 in\nf 0","position":{"start":{"line":49,"column":1},"end":{"line":54,"column":1}},"key":"iUQhTo1Qq2"},{"type":"paragraph","position":{"start":{"line":56,"column":1},"end":{"line":56,"column":1}},"children":[{"type":"text","value":"According to our semantics thus far, it would evaluate as follows:","position":{"start":{"line":56,"column":1},"end":{"line":56,"column":1}},"key":"z3eppebQMA"}],"key":"CchDUUznWu"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":58,"column":1},"end":{"line":74,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":58,"column":1},"end":{"line":59,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"children":[{"type":"inlineCode","value":"let x = 1","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"nW8SC1AN0K"},{"type":"text","value":" would produce the environment ","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"kZmqOc5jUd"},{"type":"inlineCode","value":"{x:1}","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"IgRyk5v8GW"},{"type":"text","value":".","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"GBEm7BZTk9"}],"key":"tq40xNADQu"}],"key":"DcyIsRom7i"},{"type":"listItem","spread":true,"position":{"start":{"line":60,"column":1},"end":{"line":61,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"children":[{"type":"inlineCode","value":"let f = fun y -> x","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"lxv0YjzAOj"},{"type":"text","value":" would produce the environment ","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"MsukeD7hkq"},{"type":"inlineCode","value":"{x:1, f:(fun y -> x)}","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"vEKVqij7Eh"},{"type":"text","value":".","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"RapTC60Q9I"}],"key":"k6BjRenMXt"}],"key":"beX0j93WKm"},{"type":"listItem","spread":true,"position":{"start":{"line":62,"column":1},"end":{"line":63,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"children":[{"type":"inlineCode","value":"let x = 2","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"MoLKxwp5bB"},{"type":"text","value":" would produce the environment ","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"ZW1yo8bf1E"},{"type":"inlineCode","value":"{x:2, f:(fun y -> x)}","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"lSJuL1xahO"},{"type":"text","value":". Note how the binding of ","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"M2YEWb3Tm4"},{"type":"inlineCode","value":"x","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"CFSuSg0cpH"},{"type":"text","value":" to ","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"s3HqDWxHSM"},{"type":"inlineCode","value":"1","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"E1VSl7uNKw"},{"type":"text","value":" is shadowed by the new binding.","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"SmGjSAwO25"}],"key":"MiQvAaxSPG"}],"key":"yWgKuRLz7D"},{"type":"listItem","spread":true,"position":{"start":{"line":64,"column":1},"end":{"line":73,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"children":[{"type":"text","value":"Now we would evaluate ","position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"key":"RA4PgBpYFd"},{"type":"inlineCode","value":"<{x:2, f:(fun y -> x)}, f 0>","position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"key":"yjIIHFK8Ee"}],"key":"RrKXq7r8nk"},{"type":"code","lang":"ocaml","value":"<{x:2, f:(fun y -> x)}, f 0> ==> 2\n  because <{x:2, f:(fun y -> x)}, f> ==> fun y -> x\n  and <{x:2, f:(fun y -> x)}, 0> ==> 0\n  and <{x:2, f:(fun y -> x)}[y -> 0], x> ==> 2`\n    because <{x:2, f:(fun y -> x), y:0}, x> ==> 2`","position":{"start":{"line":66,"column":1},"end":{"line":72,"column":1}},"key":"qtVWM6m38C"}],"key":"SVUimnleRU"},{"type":"listItem","spread":true,"position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"children":[{"type":"text","value":"The result is therefore ","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"key":"TZ2ioeQ7Yn"},{"type":"inlineCode","value":"2","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"key":"jnJ8FFRzef"},{"type":"text","value":".","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"key":"DEeJWr6MEl"}],"key":"e1FKf4ldSW"}],"key":"UgIcQKiRDy"}],"key":"hVzEbSN0cv"}],"key":"KAcz2za1Hf"},{"type":"paragraph","position":{"start":{"line":76,"column":1},"end":{"line":76,"column":1}},"children":[{"type":"text","value":"However, this should evaluate to 1. Notice that we evaluated e1 in the current environment, or more formally, we used a dynamic scope here.","position":{"start":{"line":76,"column":1},"end":{"line":76,"column":1}},"key":"OPAxP5RHEl"}],"key":"vG2LeZkFIq"},{"type":"heading","depth":3,"position":{"start":{"line":78,"column":1},"end":{"line":78,"column":1}},"children":[{"type":"text","value":"Dynamic vs. Static Scope","position":{"start":{"line":78,"column":1},"end":{"line":78,"column":1}},"key":"yLUfHh6cGF"}],"identifier":"dynamic-vs-static-scope","label":"Dynamic vs. Static Scope","html_id":"dynamic-vs-static-scope","implicit":true,"key":"nQg5alxKkF"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":80,"column":1},"end":{"line":82,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"children":[{"type":"strong","position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"children":[{"type":"text","value":"Dynamic Scope","position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"key":"UJDqgz4tCF"}],"key":"effoq4eKR9"},{"type":"text","value":": the body of a function is evaluated in the current dynamic environment at the time the function is ","position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"key":"ayH2C7hLbh"},{"type":"strong","position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"children":[{"type":"text","value":"called","position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"key":"k8ycGRw5a0"}],"key":"hq4NlP8Vqe"},{"type":"text","value":", i.e. it uses the latest binding","position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"key":"oVyWeZHeXI"}],"key":"Emiuacgpmr"},{"type":"listItem","spread":true,"position":{"start":{"line":81,"column":1},"end":{"line":82,"column":1}},"children":[{"type":"strong","position":{"start":{"line":81,"column":1},"end":{"line":81,"column":1}},"children":[{"type":"text","value":"Lexical Scope","position":{"start":{"line":81,"column":1},"end":{"line":81,"column":1}},"key":"tKDs8fjj3C"}],"key":"QxsRx921F0"},{"type":"text","value":": the body of a function is evaluated in the old dynamic environment that existed at the time the function was ","position":{"start":{"line":81,"column":1},"end":{"line":81,"column":1}},"key":"bd8PLDVngP"},{"type":"strong","position":{"start":{"line":81,"column":1},"end":{"line":81,"column":1}},"children":[{"type":"text","value":"defined","position":{"start":{"line":81,"column":1},"end":{"line":81,"column":1}},"key":"uDrErGtAfn"}],"key":"xxznK4Mi4F"},{"type":"text","value":".","position":{"start":{"line":81,"column":1},"end":{"line":81,"column":1}},"key":"hUPbgpxKaQ"}],"key":"jcsbeTwSWs"}],"key":"WaMh1mXj2C"},{"type":"paragraph","position":{"start":{"line":83,"column":1},"end":{"line":83,"column":1}},"children":[{"type":"text","value":"Most modern languages use lexical scope.","position":{"start":{"line":83,"column":1},"end":{"line":83,"column":1}},"key":"Bs019yL6Lx"}],"key":"mzvKYpWOUG"},{"type":"heading","depth":3,"position":{"start":{"line":85,"column":1},"end":{"line":85,"column":1}},"children":[{"type":"text","value":"Implementing Time Travel","position":{"start":{"line":85,"column":1},"end":{"line":85,"column":1}},"key":"QmV8eRbTEO"}],"identifier":"implementing-time-travel","label":"Implementing Time Travel","html_id":"implementing-time-travel","implicit":true,"key":"VOHNkD5cNa"},{"type":"paragraph","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"children":[{"type":"text","value":"We have to store the variable binding at the time the function was defined. We define a new data structure called “closure” with two parts: ","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"key":"yS4nab5u6X"},{"type":"inlineCode","value":"(|exp, env|)","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"key":"bOmnLTy9l5"},{"type":"text","value":", where ","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"key":"WmvvsIR7pY"},{"type":"inlineCode","value":"exp","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"key":"V2vLXElv7X"},{"type":"text","value":" is the expression we are concerned about, and ","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"key":"LOUsneJFAq"},{"type":"inlineCode","value":"env","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"key":"k17VCXGSbm"},{"type":"text","value":" the environment when the expression was defined.","position":{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},"key":"cFXoaJmPG1"}],"key":"Ps9Oh0DnNd"},{"type":"paragraph","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"children":[{"type":"text","value":"Since we only have to consider scope in function application, the ","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"PRDVfFHqTa"},{"type":"inlineCode","value":"exp","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"YZcOOasMfg"},{"type":"text","value":" in our closure must always be a function, denoted by ","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"IbwNzd3DZj"},{"type":"inlineCode","value":"fun x -> e","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"slG9wwEyzU"},{"type":"text","value":". Therefore, we can also write our closure as ","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"sLrIRMH2j7"},{"type":"inlineCode","value":"(|x, exp, env|)","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"QSyXyrcrIM"},{"type":"text","value":", where ","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"Iw5b5ubLqZ"},{"type":"inlineCode","value":"x","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"xqPp49PHA1"},{"type":"text","value":" is the argument name, ","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"BVUmvTyti4"},{"type":"inlineCode","value":"e","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"uKejz2f8Db"},{"type":"text","value":" is the function body, and ","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"PR5HCUbFmb"},{"type":"inlineCode","value":"env","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"mb7MLYQ5GX"},{"type":"text","value":" is the environment when this function was defined. In fact, that’s how we define it when implementing the Environment Model.","position":{"start":{"line":89,"column":1},"end":{"line":89,"column":1}},"key":"waJOEW6lz8"}],"key":"sZHMtNYeeV"},{"type":"paragraph","position":{"start":{"line":91,"column":1},"end":{"line":91,"column":1}},"children":[{"type":"text","value":"When we use big-step relation in evaluation, we say the result must be a value. Here, we can consider ","position":{"start":{"line":91,"column":1},"end":{"line":91,"column":1}},"key":"QsFkMywVJN"},{"type":"emphasis","position":{"start":{"line":91,"column":1},"end":{"line":91,"column":1}},"children":[{"type":"text","value":"closure","position":{"start":{"line":91,"column":1},"end":{"line":91,"column":1}},"key":"hUdRg9N5l0"}],"key":"cmpGag1o1d"},{"type":"text","value":" to be the value evaluated from a function. ","position":{"start":{"line":91,"column":1},"end":{"line":91,"column":1}},"key":"YavtGuHncJ"},{"type":"inlineCode","value":"<env, fun x -> e> ==> (| fun x -> e, env |)","position":{"start":{"line":91,"column":1},"end":{"line":91,"column":1}},"key":"wDhN6eimDD"}],"key":"qHU8RPsKSy"},{"type":"paragraph","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"children":[{"type":"text","value":"Using closure, we can now correctly define evaluation of function applications. (","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"key":"b2UeOISsk4"},{"type":"inlineCode","value":"defenv","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"key":"hix32v34lQ"},{"type":"text","value":" represents the environment when ","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"key":"KZazMrZ3N7"},{"type":"inlineCode","value":"e1","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"key":"mtz6hf04Ir"},{"type":"text","value":" was defined)","position":{"start":{"line":93,"column":1},"end":{"line":93,"column":1}},"key":"IjOuTYvgLh"}],"key":"I3usI7X2HK"},{"type":"code","lang":"Ocaml","value":"<env, e1 e2> ==> v\n  if <env, e1> ==> (| fun x -> e, defenv |)\n  and <env, e2> ==> v2\n  and <defenv[x -> v2], e> ==> v","position":{"start":{"line":95,"column":1},"end":{"line":100,"column":1}},"key":"hOjPtbOejK"}],"key":"NhRO3hMpOt"}],"key":"QineJOguvZ"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"The Substitution Model","url":"/2020-04-14-the-substitution-model","group":"CS3110 Functional Programming"},"next":{"title":"Machine Learning Basics","url":"/2021-08-31-machine-learning-basics","group":"CS4780 Intro to Machine Learning"}}},"domain":"http://localhost:3000"}