{"version":2,"kind":"Article","sha256":"cd3eb07739da8f0eddcaae3887cb887523ec3dcb4336c200ffc4e0d280674dcb","slug":"2020-04-06-red-black-tree","location":"/CS3110/2020-04-06-Red-Black-Tree.md","dependencies":[],"frontmatter":{"title":"Red Black Tree","tags":["Cornell","CS3110","20SP"],"date":"2020-04-06","authors":[{"nameParsed":{"literal":"Yao Lirong","given":"Yao","family":"Lirong"},"name":"Yao Lirong","affiliations":["Cornell University"],"url":"https://yao-lirong.github.io","linkedin":"https://www.linkedin.com/in/yao-lirong/","id":"contributors-myst-generated-uid-0"}],"keywords":["Cornell","CS","Yao Lirong"],"affiliations":[{"id":"Cornell University","name":"Cornell University"}],"numbering":{"title":{"offset":1}},"exports":[{"format":"md","filename":"2020-04-06-Red-Black-Tree.md","url":"/cornell-notes/build/2020-04-06-Red-Black-c2e08e22832f2d5c8ba94cc9f117a93f.md"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"From Textbook: ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"uf86lx0uN0"},{"type":"link","url":"https://www.cs.cornell.edu/courses/cs3110/2020sp/textbook/eff/rb.html","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Red-Black Trees","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"GZZVITOtTw"}],"urlSource":"https://www.cs.cornell.edu/courses/cs3110/2020sp/textbook/eff/rb.html","key":"l2ZNcfLO8g"}],"key":"UmGvTGFSv5"},{"type":"thematicBreak","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"DHW7XhEicP"},{"type":"comment","value":"more","key":"KrD14tCHq1"},{"type":"heading","depth":2,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Invariant","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"dwgUexhaLR"}],"identifier":"invariant","label":"Invariant","html_id":"invariant","implicit":true,"key":"sEJZdp5aor"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":18,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":18,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Every node is colored either red or black","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"ObeyIXwULV"}],"key":"Jk070b9kJR"}],"key":"sSAhwMGdzf"},{"type":"listItem","spread":true,"position":{"start":{"line":20,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"Leaves and root colored black","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"VlbEHsLVjw"}],"key":"v6TYHTJKcg"}],"key":"cTYvjErpzZ"},{"type":"listItem","spread":true,"position":{"start":{"line":22,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"strong","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"Local Invariant","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"AeOkDCaCPf"}],"key":"gJ9XQCM4H0"},{"type":"text","value":": no red node has a direct red child (only applies to its direct children and doesn’t apply to grand children or grand-grandchildren; in other words, red nodes cannot be repeated)","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"SyShPZrRLK"}],"key":"XoDdpzLcX0"}],"key":"FDYDoPJTHQ"},{"type":"listItem","spread":true,"position":{"start":{"line":24,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"strong","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"Global Invariant","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"J0727Rcdfj"}],"key":"GT7GLNmjUs"},{"type":"text","value":": Every path from the root to a leaf has the same number of black nodes","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"IjjQfcNzZt"}],"key":"gRQmTI02mF"}],"key":"WZLxxLmX3W"}],"key":"bBEf4npmQ7"},{"type":"paragraph","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"text","value":"The invariant implies that: length of longest path is at most twice as long as as the shortest path. (extreme case: path with red node in between each black node vs. path with only black nodes: B-R-B-R-B-R-B vs. B-B-B-B)","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"u0LIFMSO5z"}],"key":"wTScfkNXTn"},{"type":"heading","depth":2,"position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"Implementation","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"uAlwJO7ANG"}],"identifier":"implementation","label":"Implementation","html_id":"implementation","implicit":true,"key":"DQmEFDiIZs"},{"type":"paragraph","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"text","value":"红黑树的 OCaml 实现着实震惊了我，让我惊讶 OCaml 原来是这么强大的一个语言","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"DbTM9JAWs1"}],"key":"SqIF3Aq9Dy"},{"type":"paragraph","position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"children":[{"type":"text","value":"Note where in the code we applied ","position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"key":"VV6yojl9FK"},{"type":"inlineCode","value":"balance","position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"key":"V5jKC40kaC"},{"type":"text","value":". It is the father of the node that breaks the invariant and is also the deepest black node where an invariant is violated.","position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"key":"Z2E3VUGMcj"}],"key":"gScCMCyCyc"},{"type":"code","lang":"Ocaml","value":"let balance = function\n  | Black, z, Node (Red, y, Node (Red, x, a, b), c), d\n  | Black, z, Node (Red, x, a, Node (Red, y, b, c)), d\n  | Black, x, a, Node (Red, z, Node (Red, y, b, c), d)\n  | Black, x, a, Node (Red, y, b, Node (Red, z, c, d)) ->\n      Node (Red, y, Node (Black, x, a, b), Node (Black, z, c, d))\n  | a, b, c, d -> Node (a, b, c, d)\n\nlet insert x s =\n  let rec ins = function\n    | Leaf -> Node (Red, x, Leaf, Leaf)\n    | Node (color, y, a, b) as s ->\n      if x < y then balance (color, y, ins a, b)\n      else if x > y then balance (color, y, a, ins b)\n      else s in\n  match ins s with\n    | Node (_, y, a, b) -> Node (Black, y, a, b)\n    | Leaf -> (* guaranteed to be nonempty *)\n        failwith \"RBT insert failed with ins returning leaf\"","position":{"start":{"line":34,"column":1},"end":{"line":54,"column":1}},"key":"Gp9GBKSda3"}],"key":"VBWsWTmIHY"}],"key":"yMLpXajsV3"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Mutability","url":"/2020-03-03-mutability","group":"CS3110 Functional Programming"},"next":{"title":"Interpreter","url":"/2020-04-09-interpreter","group":"CS3110 Functional Programming"}}},"domain":"http://localhost:3000"}